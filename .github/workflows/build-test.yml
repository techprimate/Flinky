name: Build and Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.job.name}}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: macos-15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Install Dependencies
        run: brew bundle --file Brewfile-ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: bundle exec fastlane build_ci
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            raw-build-ios.log
          retention-days: 1

      - name: Run CI Diagnostics
        if: failure()
        run: ./Scripts/ci-diagnostics.sh

  build-test:
    name: Test
    runs-on: macos-15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Install Dependencies
        run: brew bundle --file Brewfile-ci

      - name: Test
        run: make test-ios

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            raw-test-ios.log
          retention-days: 1

      - name: Run CI Diagnostics
        if: failure()
        run: ./Scripts/ci-diagnostics.sh

  build-test-ui:
    name: Test UI
    runs-on: macos-15
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Install Dependencies
        run: brew bundle --file Brewfile-ci

      - name: Test UI
        run: make test-ui-ios

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-logs
          path: |
            raw-test-ui-ios.log
          retention-days: 1

      - name: Run CI Diagnostics
        if: failure()
        run: ./Scripts/ci-diagnostics.sh
